<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Philosophy art on Edward De Brouwer</title>
    <link>http://edebrouwer.github.io/categories/philosophy-art/</link>
    <description>Recent content in Philosophy art on Edward De Brouwer</description>
    <image>
      <url>http://edebrouwer.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>http://edebrouwer.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 01 Jan 2024 12:10:59 +0200</lastBuildDate><atom:link href="http://edebrouwer.github.io/categories/philosophy-art/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>A machine told you to fall in love and you fell for it</title>
      <link>http://edebrouwer.github.io/philosophy/machine_told_you/</link>
      <pubDate>Mon, 01 Jan 2024 12:10:59 +0200</pubDate>
      
      <guid>http://edebrouwer.github.io/philosophy/machine_told_you/</guid>
      <description>by Edward De Brouwer and Giulia Lazzara
The Halting Problem (Informal) Statement Given an input, any machine either processes that input in a finite amount of time (it halts), or runs forever in an infinite loop. The halting problem asks whether it is possible to create a machine that, given any other machine and its input, can determine whether that machine will eventually halt, or not.
$$â™¥$$
(Informal) Proof Let $M$ be the set of all possible machines, and $X$ the space of program inputs.</description>
    </item>
    
  </channel>
</rss>
